services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped

  redis:
    build: ./requirements/bonus/redis
    container_name: redis
    networks:
      - backend
    restart: unless-stopped

  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    depends_on:
      - mariadb
      - redis
    env_file:
      - .env
    environment:
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_USER_PWD}
    volumes:
      - www-data:/var/www/html
    networks:
      - backend
    restart: unless-stopped

  nginx:
    build: ./requirements/nginx
    container_name: nginx
    depends_on:
      - wordpress
      - adminer
    ports:
      - "443:443"
    volumes:
      - www-data:/var/www/html
    networks:
      - frontend
      - backend
    restart: unless-stopped

  adminer:
    build: ./requirements/bonus/adminer
    container_name: adminer
    depends_on:
      - mariadb
    networks:
      - frontend
      - backend
    restart: unless-stopped

  static-site:
    build: ./requirements/bonus/site
    container_name: static-site
    networks:
      - frontend
    restart: unless-stopped

  ftpd:
    build: ./requirements/bonus/ftpd
    container_name: ftpd
    env_file:
      - .env
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes:
      - www-data:/var/www/html:rw
    networks:
      - backend
    restart: unless-stopped

  cadvisor:
    build:
      context: requirements/bonus/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - frontend
      - backend
    restart: always

networks:
  frontend:
    driver: bridge
    name: inception-frontend
  backend:
    driver: bridge
    name: inception-backend

volumes:
  www-data:
    driver_opts:
      type: local
      device: /home/${USER}/data/www-data
      o: bind
  db-data:
    driver_opts:
      type: none
      device: /home/${USER}/data/data-db
      o: bind